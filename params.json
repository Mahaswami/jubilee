{"name":"Jubilee","tagline":"A rack server with Vert.x awesomeness builtin","body":"[![Build Status](https://travis-ci.org/isaiah/jubilee.png?branch=master)](https://travis-ci.org/isaiah/jubilee)\r\n\r\nJubilee server\r\n=========\r\n \r\n> \"We need a web framework for Vertx.\", you said.\r\n\r\n> \"But why not use Vertx in your Rails applications, it's the most productive web framework ever created.\"\r\n\r\nThe Answer is Jubilee, a rack server with [vertx 2.0](http://vertx.io) awesomeness builtin. Check out the\r\n[demo](http://192.241.201.68:8080/) [application](https://github.com/isaiah/jubilee/tree/master/examples/chatapp).\r\n\r\nWhy another rack server?\r\n------------------------\r\n\r\n> \"Vert.x is a lightweight, high performance application platform for the JVM\r\n> that's designed for modern mobile, web, and enterprise applications.\"\r\n>      - vertx.io site\r\n\r\nIn short, Vertx is nodejs on the JVM, only much more faster, checkout the awesome\r\n[benchmarks](http://vertxproject.wordpress.com/2012/05/09/vert-x-vs-node-js-simple-http-benchmarks/)\r\n\r\nBy using Vertx, jubilee inherent advantages in terms of performance, and all\r\nthe other cool features of Vertx:\r\n\r\n* [EventBus](https://github.com/isaiah/jubilee/wiki/Event-Bus)\r\n* [SharedData](https://github.com/isaiah/jubilee/wiki/SharedData)\r\n* [Clustering](https://github.com/isaiah/jubilee/wiki/Clustering)\r\n\r\n\r\n\r\nInstallation\r\n------------\r\n\r\n    $ jruby -S gem install jubilee\r\n\r\nJubilee requires JRuby 1.7.5 or later, and JDK 7+\r\n\r\nGet started\r\n-----------\r\n\r\n    $ cd a-rack-app\r\n    $ jruby -S jubilee\r\n\r\nSetup\r\n-----\r\n\r\nIf you use bundler, you might want to add `jubilee` to your Gemfile,\r\nthis is also required if you want use rails http streaming,\r\n\r\n    $ jubilee\r\n\r\nor if you prefer to use the rack handler(e.g. development) use:\r\n\r\n    $ rails s jubilee\r\n\r\nor\r\n\r\n    $ rackup -s jubilee\r\n\r\nEvent Bus\r\n=========\r\n\r\nEvent Bus is a pub/sub mechanism, it can be used from server to server, server\r\nto client and client to client, with the same API!\r\n\r\nExamples\r\n--------\r\n\r\nAssume necessary javascript files are loaded in the page (they can be found [here](https://github.com/isaiah/jubilee/tree/master/examples/client)),\r\nstart jubilee in a rack application with:\r\n\r\n```\r\n$ jubilee --eventbus /eventbus\r\n```\r\n\r\nIn one browser:\r\n\r\n```javascript\r\nvar eb = new vertx.EventBus(\"/eventbus\");\r\neb.registerHandler(\"test\", function(data){\r\n  console.info(data);\r\n});\r\n\r\n```\r\n\r\nIn another:\r\n\r\n```javascript\r\nvar eb = new vertx.EventBus(\"/eventbus\");\r\neb.send(\"test\", \"hello, world\");\r\n```\r\n\r\nFor more advanced examples, checkout the\r\n[chatapp](https://github.com/isaiah/jubilee/tree/master/examples/chatapp).\r\n\r\nPerformance Tuning\r\n-------------------\r\n\r\nIf you're creating a lot of connections to a Jubilee(Vert.x) server in a short\r\nperiod of time, e.g. benchmarking with tools like [wrk](https://github.com/wg/wrk),\r\nyou may need to tweak some settings in order to avoid the TCP accept queue\r\ngetting full. This can result in connections being refused or packets being\r\ndropped during the handshake which can then cause the client to retry.\r\n\r\nA classic symptom of this is if you see long connection times just over\r\n3000ms at your client.\r\n\r\nHow to tune this is operating system specific but in Linux you need to\r\nincrease a couple of settings in the TCP / Net config (10000 is an\r\narbitrarily large number)\r\n\r\n```shell\r\nsudo sysctl -w net.core.somaxconn=10000\r\nsudo sysctl -w net.ipv4.tcp_max_syn_backlog=10000\r\n```\r\n\r\nFor other operating systems, please consult your operating system\r\ndocumentation.\r\n\r\nContributing\r\n-------------\r\nAny kinds of contributions are appreciated.\r\n\r\nFile an issue [here](https://github.com/isaiah/jubilee/issues) if you encounter any problems. Or if you prefer to fix by yourself:\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\nLicense\r\n--------\r\n\r\nSee [LICENSE.txt](https://github.com/isaiah/jubilee/blob/master/LICENSE.txt)\r\n\r\nAcknowledgment\r\n--------------\r\n\r\nYourKit is kindly supporting Jubilee Server with its full-featured Java Profiler.\r\nYourKit, LLC is the creator of innovative and intelligent tools for profiling\r\nJava and .NET applications. Take a look at YourKit's leading software products:\r\n[YourKit Java\r\nProfiler](http://www.yourkit.com/java/profiler/index.jsp) and\r\n[YourKit .NET Profiler](http://www.yourkit.com/.net/profiler/index.jsp).\r\n","google":"UA-46822013-1","note":"Don't delete this file! It's used internally to help with page regeneration."}